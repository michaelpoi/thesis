version: '3.9'

services:
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile

    ports:
      - "8000:8000"

    depends_on:
      - rabbitmq
      - postgres

    environment:
      - db_host=postgres
      - rq_host=rabbitmq


  rabbitmq:
    image: rabbitmq:4.0-management-alpine
    container_name: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"

    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5


  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile

    volumes:
      - frontend_build:/app/build  # Export build to a shared volume



  postgres:
    image: postgres:14-alpine
    container_name: "postgres"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=metasimulator
      - POSTGRES_PASSWORD=metasimulator
      - POSTGRES_DB=metasimulator

  simulator:
    build:
      context: ./simulation
      dockerfile: ./Dockerfile

    container_name: simulator

    depends_on:
      - rabbitmq
      - api
    environment:
      - rq_host=rabbitmq
      - API_URL=http://127.0.0.1/api


  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro  # Serve build output
    depends_on:
      - frontend
      - api


volumes:
  frontend_build:


