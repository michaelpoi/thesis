version: '3.9'

services:
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile

    ports:
      - "8000:8000"

    depends_on:
      - rabbitmq
      - postgres

    environment:
      - db_host=postgres
      - rq_host=rabbitmq

    volumes:
      - ./api/simulation_logs:/app/logs


  rabbitmq:
    image: rabbitmq:4.0-management-alpine
    container_name: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"

    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5


  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile




  postgres:
    image: postgres:14-alpine
    container_name: "postgres"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=metasimulator
      - POSTGRES_PASSWORD=metasimulator
      - POSTGRES_DB=metasimulator

  # simulator:
  #   build:
  #     context: ./simulation
  #     dockerfile: ./Dockerfile

  #   container_name: simulator

  #   depends_on:
  #     - rabbitmq
  #     - api
  #   environment:
  #     - rq_host=rabbitmq
  #     - API_URL=http://api:8000/api

  #   volumes:
  #     - ./simulation/logs:/app/logs

  #   restart: always


  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - api


#  schemaspy:
#    image: schemaspy/schemaspy
#    container_name: schemaspy
#    depends_on:
#      - postgres
#    volumes:
#      - ./schemaspy_output:/output
#      - ./postgresql-42.2.23.jar:/drivers/postgresql-42.2.23.jar
#    command: >
#      -t pgsql
#      -host postgres
#      -port 5432
#      -db metasimulator
#      -u metasimulator
#      -p metasimulator
#      -dp /drivers
#      -driver org.postgresql.Driver






